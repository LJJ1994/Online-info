function News(){this.progressGroup=$("#progress-group")}News.prototype.run=function(){var e=this;e.listenQiniuFileUploadEvent(),e.initUeditor(),e.listenAddNewsEvent()},News.prototype.initUeditor=function(){window.ue=UE.getEditor("container",{initialFrameHeight:500,serverUrl:"/ueditor/upload/"})},News.prototype.listenAddNewsEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var o=$("input[name='title']").val(),t=$("select[name='category']").val(),n=$("input[name='desc']").val(),r=$("input[name='thumbnail']").val(),s=window.ue.getContent();$.post({url:"/cms/write_news/",data:{title:o,desc:n,content:s,thumbnail:r,category:t},success:function(e){200===e.code?xfzalert.alertSuccess("添加新闻成功!",function(){window.location.reload()}):window.messageBox.showError(e.message)},error:function(e){window.messageBox.showError(e.message)}})})},News.prototype.listenUploadfileEvent=function(){$("#thumbnail-btn").change(function(){var e=this.files[0],o=new FormData;o.append("file",e),$.post({url:"/cms/upload_file/",data:o,contentType:!1,processData:!1,success:function(e){if(200===e.code){var o=e.data.url;$("#thumbnail-form").val(o)}else window.messageBox.showError(e.message)},error:function(e){console.log(e)}})})},News.prototype.listenQiniuFileUploadEvent=function(){var i=this;$("#thumbnail-btn").change(function(){var s=this.files[0];$.get({url:"/cms/qn_token/",success:function(e){if(200===e.code){var o=e.data.token,t=(new Date).getTime()+"."+s.name.split(".")[1],n={fname:t,params:{},mimeType:null},r={useCdnDomain:!0,retryCount:5,region:qiniu.region.z2};qiniu.upload(s,t,o,n,r).subscribe({next:i.handleFileUploadProcess,error:i.handleFileUploadError,complete:i.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProcess=function(e){var o=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var t=$(".progress-bar");t.css({width:o}),t.text(o)},News.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},News.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var o="http://ptmoolpfo.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(o)},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
