function AddTeacher(){this.progressGroup=$("#progress-group")}AddTeacher.prototype.run=function(){var e=this;e.listenQiniuFileUploadEvent(),e.initUeditor(),e.listenAddNewsEvent(),e.listenDeleteTeacherEvent()},AddTeacher.prototype.initUeditor=function(){window.ue=UE.getEditor("profile-editor",{initialFrameHeight:500,serverUrl:"/ueditor/upload/"})},AddTeacher.prototype.listenAddNewsEvent=function(){$("#teacher-submit-btn").click(function(e){e.preventDefault();var o=$(this).attr("data-teacher-id");console.log("pk的值:",o);var t="";t=o?"/cms/edit_course_teacher/":"/cms/add_course_teacher/";var r=$("input[name='username']").val(),n=$("input[name='jobtitle']").val(),a=$("input[name='thumbnail']").val(),i=window.ue.getContent();console.log(r,n,a,i),$.post({url:t,data:{username:r,jobtitle:n,avatar_url:a,profile:i,pk:o},success:function(e){200===e.code?xfzalert.alertSuccess("添加讲师成功!",function(){window.location.reload()}):window.messageBox.showError(e.message)},error:function(e){window.messageBox.showError(e.message)}})})},AddTeacher.prototype.listenDeleteTeacherEvent=function(){$(".delete-btn").click(function(e){e.preventDefault();var o=$(this).attr("data-teacher-id");xfzalert.alertConfirm({text:"你确实要删除该讲师?",confirmCallback:function(){$.post({url:"/cms/delete_course_teacher/",data:{teacher_id:o},success:function(e){200===e.code&&(window.location.reload(),window.messageBox.showSuccess(message=e.message))}})}})})},AddTeacher.prototype.listenUploadfileEvent=function(){$("#thumbnail-btn").change(function(){var e=this.files[0],o=new FormData;o.append("file",e),$.post({url:"/cms/upload_file/",data:o,contentType:!1,processData:!1,success:function(e){if(200===e.code){var o=e.data.url;$("#thumbnail-form").val(o)}else window.messageBox.showError(e.message)},error:function(e){console.log(e)}})})},AddTeacher.prototype.listenQiniuFileUploadEvent=function(){var i=this;$("#thumbnail-btn").change(function(){var a=this.files[0];$.get({url:"/cms/qn_token/",success:function(e){if(200===e.code){var o=e.data.token,t=(new Date).getTime()+"."+a.name.split(".")[1],r={fname:t,params:{},mimeType:null},n={useCdnDomain:!0,retryCount:5,region:qiniu.region.z2};qiniu.upload(a,t,o,r,n).subscribe({next:i.handleFileUploadProcess,error:i.handleFileUploadError,complete:i.handleFileUploadComplete})}}})})},AddTeacher.prototype.handleFileUploadProcess=function(e){var o=e.total.percent.toFixed(0)+"%";AddTeacher.progressGroup.show();var t=$(".progress-bar");t.css({width:o}),t.text(o)},AddTeacher.prototype.handleFileUploadError=function(e){window.messageBox.showError(e.message),$("#progress-group").hide(),console.log(e.message)},AddTeacher.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var o="http://ptmoolpfo.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(o)},$(function(){(new AddTeacher).run(),AddTeacher.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
