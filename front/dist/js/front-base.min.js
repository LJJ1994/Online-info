function getCookie(t){var e=document.cookie.match("\\b"+t+"=([^;]*)\\b");return e?e[1]:void 0}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptchaBtn=$(".sms-captcha-btn")}function FrontBase(){}Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaCode(),t.listenSmsCaptchaEvent(),t.listenSignupEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show("fade")},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenImgCaptchaCode=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.smsSuccessSend=function(){var t=this,e=60;window.messageBox.showSuccess("短信验证码发送成功!"),t.smsCaptchaBtn.addClass("disabled"),t.smsCaptchaBtn.unbind("click");var n=setInterval(function(){t.smsCaptchaBtn.text(e+"s"),(e-=1)<=0&&(clearInterval(n),t.smsCaptchaBtn.removeClass("disabled"),t.smsCaptchaBtn.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,s=$('.signup-group input[name="telephone"]');n.smsCaptchaBtn.click(function(){var t=s.val();t||window.messageBox.show("请填写手机号！");var e={telephone:t};$.get({url:"/account/sms_captcha/",data:e,success:function(t){200===t.code?n.smsSuccessSend():alert(t.message)},error:function(){window.messageBox.showError("服务器内部错误!")}})})},Auth.prototype.listenShowHideEvent=function(){var t=this,e=$(".signin-btn"),n=$(".signup-btn"),s=$(".close-btn");e.click(function(){t.showEvent(),t.scrollWrapper.css({left:0})}),n.click(function(){t.showEvent(),t.scrollWrapper.css({left:"-400px"})}),s.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");(t=parseInt(t))<0?e.scrollWrapper.animate({left:0}):e.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var o=this,t=$(".signin-group"),e=t.find("input[name='telephone']"),n=t.find("input[name='password']"),s=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t={telephone:e.val(),password:n.val(),remember:s.prop("checked")?1:0};$.ajax({url:"/account/login/",type:"POST",data:t,headers:{"X-CSRFToken":getCookie("csrftoken")},success:function(t){if(200===t.code)o.hideEvent(),window.location.reload();else{var e=t.message;if("string"==typeof messagObje||e.constructor===String)window.messageBox.show(e);else for(var n in e){var s=e[n][0];window.messageBox.show(s)}}},error:function(){window.messageBox.showError("服务器内部错误!")}})})},Auth.prototype.listenSignupEvent=function(){var n=$(".signup-group");n.find(".submit-btn").click(function(t){t.preventDefault();var e={telephone:n.find('input[name="telephone"]').val(),username:n.find('input[name="username"]').val(),password1:n.find('input[name="password1"]').val(),password2:n.find('input[name="password2"]').val(),img_captcha:n.find('input[name="img_captcha"]').val(),sms_captcha:n.find('input[name="sms_captcha"]').val()};$.ajax({url:"/account/register/",data:e,type:"POST",success:function(t){if(200===t.code)window.messageBox.showSuccess("注册成功!"),window.location.reload();else{var e=t.message;if("string"==typeof messagObje||e.constructor===String)window.messageBox.show(e);else for(var n in e){var s=e[n][0];window.messageBox.show(s)}}}})})},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),e=$(".user-more-box");t.hover(function(){e.show()},function(){e.hide()})},FrontBase.prototype.run=function(){this.listenAuthBoxHover(),this.listenSwitchBottom()},FrontBase.prototype.listenSwitchBottom=function(){},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var e=new Date(t),n=e.getTime(),s=((new Date).getTime()-n)/1e3;return s<60?"刚刚":60<=s&&s<3600?parseInt(s/60)+"分钟前":3600<=s&&s<86400?parseInt(s/60/60)+"小时前":86400<=s&&s<2592e3?parseInt(s/60/60/24)+"天前":e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+" "+e.getHours()+":"+e.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
