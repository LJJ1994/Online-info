function getCookie(e){var t=document.cookie.match("\\b"+e+"=([^;]*)\\b");return t?t[1]:void 0}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var e=this;e.listenShowHideEvent(),e.listenSwitchEvent(),e.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show("fade")},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var e=this,t=$(".signin-btn"),n=$(".signup-btn"),i=$(".close-btn");t.click(function(){e.showEvent(),e.scrollWrapper.css({left:0})}),n.click(function(){e.showEvent(),e.scrollWrapper.css({left:"-400px"})}),i.click(function(){e.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var t=this;$(".switch").click(function(){var e=t.scrollWrapper.css("left");(e=parseInt(e))<0?t.scrollWrapper.animate({left:0}):t.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var o=this,e=$(".signin-group"),t=e.find("input[name='telephone']"),n=e.find("input[name='password']"),i=e.find("input[name='remember']");e.find(".submit-btn").click(function(){var e={telephone:t.val(),password:n.val(),remember:i.prop("checked")?1:0};$.ajax({url:"/account/login/",type:"POST",data:e,headers:{"X-CSRFToken":getCookie("csrftoken")},success:function(e){if(200===e.code)o.hideEvent(),window.location.reload();else{var t=e.message;if("string"==typeof messagObje||t.constructor===String)window.messageBox.show(t);else for(var n in t){var i=t[n][0];window.messageBox.show(i)}}},error:function(){alert("请求参数或类型错误，请重新检查ajax代码！")}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
